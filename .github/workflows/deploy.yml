name: Deploy to AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Установить Java 21 (для сборки JAR)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Сборка JAR-файла
      - name: Build JAR file
        run: mvn clean package -DskipTests

      # Логин в Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: 'private'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      # Сборка и загрузка Docker-образа в Amazon ECR
      - name: Build, tag, and push Docker image
        env:
          AWS_REGION: us-east-1
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          IMAGE_URI=$ECR_REGISTRY/reading-service:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # Регистрация новой ECS Task Definition
      - name: Register ECS Task Definition
        run: |
          cat <<EOF > task-def.json
          {
            "family": "reading-service-task",
            "containerDefinitions": [
              {
                "name": "reading-service",
                "image": "${{ env.IMAGE_URI }}",
                "memory": 512,
                "cpu": 256,
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 8080,
                    "hostPort": 8080,
                    "protocol": "tcp"
                  }
                ],
                "secrets": [
                  {
                    "name": "SPRING_PROFILES_ACTIVE",
                    "valueFrom": "arn:aws:ssm:us-east-1:438465153597:parameter/prod/reading-service/spring-profiles-active"
                  },
                  {
                    "name": "DB_HOST",
                    "valueFrom": "arn:aws:ssm:us-east-1:438465153597:parameter/prod/reading-service/db-host"
                  },
                  {
                    "name": "DB_PORT",
                    "valueFrom": "arn:aws:ssm:us-east-1:438465153597:parameter/prod/reading-service/db-port"
                  },
                  {
                    "name": "DB_NAME",
                    "valueFrom": "arn:aws:ssm:us-east-1:438465153597:parameter/prod/reading-service/db-name"
                  },
                  {
                    "name": "DB_USERNAME",
                    "valueFrom": "arn:aws:ssm:us-east-1:438465153597:parameter/prod/reading-service/db-username"
                  },
                  {
                    "name": "DB_PASSWORD",
                    "valueFrom": "arn:aws:ssm:us-east-1:438465153597:parameter/prod/reading-service/db-password"
                  }
                ],
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": "/ecs/reading-service-task",
                    "awslogs-region": "us-east-1",
                    "awslogs-stream-prefix": "ecs"
                  }
                }
              }
            ],
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "1024",
            "memory": "3072",
            "networkMode": "awsvpc",
            "executionRoleArn": "arn:aws:iam::438465153597:role/ecsTaskExecutionRole"
          }
          EOF

          aws ecs register-task-definition \
            --cli-input-json file://task-def.json \
            --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      # Деплой в ECS
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ieltsdemo-cluster
          service: reading-service
          task-definition: reading-service-task
          wait-for-service-stability: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
